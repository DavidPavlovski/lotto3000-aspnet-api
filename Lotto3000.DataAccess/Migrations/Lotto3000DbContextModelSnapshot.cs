// <auto-generated />
using System;
using Lotto3000.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lotto3000.DataAccess.Migrations
{
    [DbContext(typeof(Lotto3000DbContext))]
    partial class Lotto3000DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lotto3000.Domain.Entities.LottoSessionDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DrawDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WinningNumbers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LottoSession", (string)null);
                });

            modelBuilder.Entity("Lotto3000.Domain.Entities.LottoTicketDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LottoSessionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LottoSessionId");

                    b.HasIndex("UserId");

                    b.ToTable("LottoTicket", (string)null);
                });

            modelBuilder.Entity("Lotto3000.Domain.Entities.UserDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@admin.com",
                            FirstName = "John",
                            IsAdmin = true,
                            LastName = "Doe",
                            Password = "?????%?????vV???",
                            UserName = "adminJohn"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@admin.com",
                            FirstName = "Bob",
                            IsAdmin = true,
                            LastName = "Bobsky",
                            Password = "H,?????mI??I8",
                            UserName = "adminBob"
                        });
                });

            modelBuilder.Entity("Lotto3000.Domain.Entities.LottoTicketDto", b =>
                {
                    b.HasOne("Lotto3000.Domain.Entities.LottoSessionDto", "LottoSession")
                        .WithMany()
                        .HasForeignKey("LottoSessionId");

                    b.HasOne("Lotto3000.Domain.Entities.UserDto", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LottoSession");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
